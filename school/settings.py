"""
Django settings for school project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
from django.core.exceptions import ImproperlyConfigured
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get('KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'student_management_system.apps.StudentManagementSystemConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',

    #rest_framework apps
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'school.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['student_management_system/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'school.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'school',
        'USER': os.environ.get('db_user'),
        'PASSWORD': os.environ.get('db_pass'),
        'HOST': 'localhost',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOGIN_URL = 'login'

AUTH_USER_MODEL = 'student_management_system.CustomUser'

#AUTHENTICATION_BACKENDS =['student_management_system.backends.EmailAuthentication']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('email_user')
EMAIL_HOST_PASSWORD = os.environ.get('email_pass')
DEFAULT_FROM_EMAIL = os.environ.get('email_user')

REST_FRAMEWORK = {
    # 'DEFAULT_RENDERER_CLASSES':(
    #     'rest_framework.renderers.JSONRenderer',
    # ),
    # 'DEFAULT_PARSER_CLASSES':(
    #     'rest_framework.parsers.JSONParser',
    # ),

   'DEFAULT_AUTHENTICATION_CLASSES':(
       'rest_framework.authentication.SessionAuthentication',
       'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
   ),
   'DEFAULT_PERMISSION_CLASSES':(
       'rest_framework.permissions.IsAuthenticated',
   ),


}

'''
curl -X POST -d 'email=adamsijachi@gmail.com&password=pius' http://localhost:8000/api/auth/token/
token = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo2LCJ1c2VybmFtZSI6InppeWFkQGdtYWlsLmNvbSIsImV4cCI6MTYwMDg0ODQ5NSwiZW1haWwiOiJ6aXlhZEBnbWFpbC5jb20ifQ.4JiDPtfc219gi_spsN0VhLLygl-1OMCm9XsEDA7Fc4M"

curl -H "Authorization: JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkYW1zaWphY2hpQGdtYWlsLmNvbSIsImV4cCI6MTYwMDg1Njc4NiwiZW1haWwiOiJhZGFtc2lqYWNoaUBnbWFpbC5jb20ifQ.zVEx1UJtVd-w2Q8KYmdWAGTEyHz_Bg0qkIS-aogzD-4"" http://localhost:8000/api/viewset-create/create-student/

 "admin": {"first_name": "miss haddy", "last_name": "ameria", "username": "hadd", "email": "haddy@gmail.com" }


   "gender": "Female", "address": "enugu state", "profile_Image": "", "date_created": "", "parent": 5,"grade": 10










{'admin': OrderedDict([('first_name', 'test'), ('last_name', 'user'), ('username', 'test'), ('password', 'pius'), ('email', 'test@gmail.com')]), 'gender': 'Male', 'address': 'enugu', 'parent': <Parent: adams>, 'grade': <Class: jss2>}
'''